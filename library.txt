# aã€œz
l=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']

# A~Z
l=['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']

# GCD
def gcd(x,y):
  while y:
    x,y=y,x%y
  return x

# LCM
def lcm(x,y):
  return x*y/gcd(x,y)

# nCr
def nCr(n,r):
  return math.factorial(n)//(math.factorial(n-r)*math.factorial(r))

# struct
class struct:
  def __init__(self,a,b,c):
    self.a=a
    self.b=b
    self.c=c

# Elastotenes's sieve
def getPrimeList(x):
  l1=list(range(2,x+1))
  l2=[]
  
  while True:
    if len(l1)==0:
      return l2
  
    x=l1[0]
    l2.append(x)
    for y in l1:
      if y%x==0:
        l1.remove(y)
